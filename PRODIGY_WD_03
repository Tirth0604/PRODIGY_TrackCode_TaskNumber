<html>
<head>
    <title> Tic-Tac-Toe</title>
</head>
<style>
    body
    {
        font-family: Arial, Helvetica, sans-serif;
        text-align: center;
    }
    .board
    {
        display: grid;
        margin: 20px auto;
        width: 320px;
        gap: 5px;
        grid-template-columns: repeat(3,100px);
        grid-template-columns: repeat(3,100px);
    }
    .cell
    {
        width: 100px;
        height: 100px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2em;
        border: 2px solid black;
        cursor: pointer;
    }
    
</style>
<body>
    <h1>
        Tic-Tac-Toe
    </h1>
    <div id="status">Player X's turn </div>
    <div class="board" id="board"></div>
    <button onclick="resetgame()"> Restart </button>
     
    <script>
        const board = document.getElementById("board");
        const status = document.getElementById("status");
        let cells = Array(9).fill(null);
        let currentPlayer = "X";
        let gameActive = true;

        function createBoard() {
            board.innerHTML = "";
            cells.forEach((cell, index) => {
                const cellDiv = document.createElement("div");
                cellDiv.classList.add("cell");
                cellDiv.dataset.index = index;
                cellDiv.addEventListener("click", handleCellClick);
                board.appendChild(cellDiv);
            });
        }

        function handleCellClick(event) {
            const index = event.target.dataset.index;
            if (cells[index] || !gameActive) return;
            
            cells[index] = currentPlayer;
            event.target.textContent = currentPlayer;
            event.target.classList.add("taken");
            
            if (checkWinner()) {
                status.textContent = `Player ${currentPlayer} wins!`;
                gameActive = false;
                return;
            }
            if (!cells.includes(null)) {
                status.textContent = "It's a draw!";
                gameActive = false;
                return;
            }
            
            currentPlayer = currentPlayer === "X" ? "O" : "X";
            status.textContent = `Player ${currentPlayer}'s turn`;
        }

        function checkWinner() {
            const winPatterns = [
                [0, 1, 2], [3, 4, 5], [6, 7, 8],
                [0, 3, 6], [1, 4, 7], [2, 5, 8],
                [0, 4, 8], [2, 4, 6]
            ];
            return winPatterns.some(pattern => {
                const [a, b, c] = pattern;
                return cells[a] && cells[a] === cells[b] && cells[a] === cells[c];
            });
        }

        function resetGame() {
            cells.fill(null);
            gameActive = true;
            currentPlayer = "X";
            status.textContent = "Player X's turn";
            createBoard();
        }

        createBoard();
    </script>



</body>
</html>
